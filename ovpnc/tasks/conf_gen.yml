---
# tasks file for ovpnc

- name: Generating OpenVPN key cert ca
  shell: |
    rm -rf '{{ovpnc_tmp}}'
    mkdir -p '{{ovpnc_tmp}}'
    cp -a /usr/share/easy-rsa/* '{{ovpnc_tmp}}'
    cd '{{ovpnc_tmp}}'
    sed -i 's/(stty/#&/' easyrsa
    sed -i 's/\-batch \$opts/& -passin stdin/' easyrsa
    ./easyrsa init-pki
    echo -e "{{ovpnc_pass_phrase}}\n{{ovpnc_pass_phrase}}\n{{ovpnc_server_cn}}\n"|./easyrsa build-ca
    echo -e "{{ovpnc_pass_phrase}}\n"|./easyrsa build-client-full "{{ovpnc_client_name}}" nopass
  args:
    executable: /usr/bin/bash
    warn: false
  when: rc_ovpnc_client_conf.stat.exists == false

- name: Generating OpenVPN tls-auth
  shell: openvpn --genkey --secret '{{ovpnc_tmp}}/static.key'
  when: rc_ovpnc_client_conf.stat.exists == false


- name: Gathering OpenVPN key
  shell: cat '{{ovpnc_tmp}}/pki/private/{{ovpnc_client_name}}.key'
  register: ovpnc_key_priv1
  when: rc_ovpnc_client_conf.stat.exists == false

- name: Gathering OpenVPN cert
  shell: openssl x509 -in '{{ovpnc_tmp}}/pki/issued/{{ovpnc_client_name}}.crt'
  register: ovpnc_key_cert1
  when: rc_ovpnc_client_conf.stat.exists == false

- name: Gathering OpenVPN ca
  shell: cat '{{ovpnc_tmp}}/pki/ca.crt'
  register: ovpnc_key_ca1
  when: rc_ovpnc_client_conf.stat.exists == false

- name: Gathering OpenVPN tls-auth
  shell: cat '{{ovpnc_tmp}}/static.key'
  register: ovpnc_key_stat1
  when: rc_ovpnc_client_conf.stat.exists == false

- name: Setting variables ovpnc_*1.stdout => vpn_*
  set_fact: {'{{item}}':"{{ vars[item+'1'].stdout }}"}
  with_items:
  - ovpnc_key_priv
  - ovpnc_key_cert
  - ovpnc_key_ca
  - ovpnc_key_stat
  when: rc_ovpnc_client_conf.stat.exists == false

- name: Removing {{ovpnc_tmp}}
  file: state=absent name={{ovpnc_tmp}}
  when: rc_ovpnc_client_conf.stat.exists == false
