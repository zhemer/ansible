---
# tasks file for openvpn_client

- name: Checking for Linux Ubuntu {{os_dist_ver}}
  fail: msg='This is not Linux Ubuntu {{os_dist_ver}} (required {{os_dist}} {{os_dist_ver}})'
  when: ansible_distribution != '{{os_dist}}' or ansible_distribution_major_version != '{{os_dist_ver}}'

- name: openvpn client - installing packages openvpn and easy-rsa
  package:
    name:
    - openssl
    - openvpn
    - easy-rsa
    state: present
  become: yes


#- debug:
#    msg: "{{ lookup('file', '/etc/issue') }}"

- name: Checking that file exists - {{vpn_client_conf}}
  stat: path='{{vpn_client_conf}}'
  register: rc_vpn_client_conf

#- name: lookup
#  shell: "echo Performing lookup {{ lookup('file', '/etc/issue') }}"

#- name: fail
#  fail:


- name: Generating OpenVPN key cert ca
  shell: |
    rm -rf '{{vpn_tmp}}'
    mkdir -p '{{vpn_tmp}}'
    cp -a /usr/share/easy-rsa/* '{{vpn_tmp}}'
    cd '{{vpn_tmp}}'
    sed -i 's/(stty/#&/' easyrsa
    sed -i 's/\-batch \$opts/& -passin stdin/' easyrsa
    ./easyrsa init-pki
    echo -e "{{vpn_pass_phrase}}\n{{vpn_pass_phrase}}\n{{vpn_server_cn}}\n"|./easyrsa build-ca
    echo -e "{{vpn_pass_phrase}}\n"|./easyrsa build-client-full "{{vpn_client_name}}" nopass
  args:
    executable: /usr/bin/bash
    warn: false
  when: rc_vpn_client_conf.stat.exists == False

- name: Generating OpenVPN tls-auth
  shell: openvpn --genkey --secret '{{vpn_tmp}}/static.key'
  when: rc_vpn_client_conf.stat.exists == False



- name: Gathering OpenVPN key
  shell: cat '{{vpn_tmp}}/pki/private/{{vpn_client_name}}.key'
  register: vpn_priv_key1
  when: rc_vpn_client_conf.stat.exists == False

- name: Gathering OpenVPN cert
  shell: openssl x509 -in '{{vpn_tmp}}/pki/issued/{{vpn_client_name}}.crt'
  register: vpn_cert1
  when: rc_vpn_client_conf.stat.exists == False

- name: Gathering OpenVPN ca
  shell: cat '{{vpn_tmp}}/pki/ca.crt'
  register: vpn_key_ca1
  when: rc_vpn_client_conf.stat.exists == False

- name: Gathering OpenVPN tls-auth
  shell: cat '{{vpn_tmp}}/static.key'
  register: vpn_key_stat1
  when: rc_vpn_client_conf.stat.exists == False

#- debug: msg="{{ lookup('vars', vpn_key_stat1.stdout) }}"
#  with_items:
#  - vpn_key_stat

- name: Setting variables vpn_*1.stdout => vpn_*
  set_fact: {'{{item}}':"{{ vars[item+'1'].stdout }}"}
  with_items:
  - vpn_priv_key
  - vpn_cert
  - vpn_key_ca
  - vpn_key_stat


- name: openvpn client - creating {{vpn_client_conf}}
  template: src="{{ item }}.j2" dest="/{{ item }}.conf" mode=400
  with_items:
  - 'etc/openvpn/{{vpn_client_name}}'
  become: yes
  when: rc_vpn_client_conf.stat.exists == False

- name: Removing {{vpn_tmp}}
  file: state=absent name={{vpn_tmp}}
  when: rc_vpn_client_conf.stat.exists == False

- fail:

- name: Restarting service openvpn@{{vpn_client_name}}
  systemd: name='openvpn@{{vpn_client_name}}' state=restarted enabled=yes
  when: rc_vpn_client_conf.stat.exists == False
