---
# tasks file for kube_inst


# Adding Kubernetes repository, installing Kubernetes and initializing local one node cluster

- name: Adding repository '{{repo_kubernetes_apt}}'
  apt_repository:
    repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
    state: present
  become: yes

- name: Installing packages {{inst_packages}}
  package:
    name: '{{inst_packages}}'
    state: present
  become: yes

#- name: Setting /etc/sysconfig/kubelet
#  copy:
#    dest: /etc/sysconfig/kubelet
#    content: |
#      KUBELET_EXTRA_ARGS='--fail-swap-on=false --cloud-provider=aws'
#  become: yes

- name: Enabling and running service - docker, kubelet
  systemd: name='{{item}}' state=started enabled=yes
  with_items:
    - docker
    - kubelet
  become: yes

- name: Kubernetes - pull images - '{{cmd_kube_pull}}'
  command: '{{cmd_kube_pull}}'
  become: yes
  register: rc
- debug: msg='{{rc.stdout_lines}}'

- name: Kubernetes - initializing cluster - '{{cmd_kube_init}}'
  command: '{{cmd_kube_init}}'
  become: yes
  register: rc
- debug: msg='{{rc.stdout_lines}}'

- name: Kubernetes - setup configuration for current user - {{ansible_user_id}}
  shell: '{{item}}'
  with_items:
    - 'mkdir -p /home/{{ansible_user_id}}/.kube'
    - 'cp -i /etc/kubernetes/admin.conf /home/{{ansible_user_id}}/.kube/config'
    - 'chown {{ansible_user_id}}:{{ansible_user_id}} /home/{{ansible_user_id}}/.kube/config'
  become: yes
  args:
    warn: false

- name: Kubernetes - creating bash completion for kubectl
  shell: kubectl completion bash > /etc/profile.d/kubectl.sh
  become: yes

- name: Kubernetes - enable to schedule pods on the control-plane - '{{cmd_kube_taint}}'
  shell: '{{cmd_kube_taint}}'
  register: rc
- debug: msg='{{rc.stdout_lines}}'


- name: Kubernetes - installing pod network - '{{cmd_kube_pod_network}}'
  shell: '{{cmd_kube_pod_network}}'
  register: rc
- debug: msg='{{rc.stdout_lines}}'

- name: Kubernetes - removing unused pod network daemonsets
  shell: 'kubectl delete -n kube-system daemonset.apps/kube-flannel-ds-{{item}}'
  with_items:
    - s390x
    - ppc64le
    - arm64
    - arm

- name: Kubernetes - running '{{cmd_kube_getall}}'
  shell: '{{cmd_kube_getall}}'
  register: rc
- debug: msg='{{rc.stdout_lines}}'


# Installing and patching metrics-server

- name: Removing directory '{{kube_inst_ms_dir}}'
  file:
    path: '{{kube_inst_ms_dir}}'
    state: absent

- name: Cloning repository '{{kube_inst_ms_git}}' into directory '{{kube_inst_ms_dir}}'
  git:
    repo: '{{kube_inst_ms_git}}'
    dest: '{{kube_inst_ms_dir}}'
    clone: yes
  register: rc
- debug: msg='{{rc}}'

- name: Kubernetes - installing metrics-server - '{{kube_inst_ms_inst}}'
  shell: '{{kube_inst_ms_inst}}'
  register: rc
- debug: msg='{{rc.stdout_lines}}'

- name: Downloading '{{kube_inst_ms_patch_file}}' into directory '{{kube_inst_ms_dir}}'
  get_url:
    url: '{{kube_inst_ms_patch_file}}'
    dest: '{{kube_inst_ms_dir}}/k8s-metrics-server.patch.yaml'
    force: yes

- name: Kubernetes - appllying metrics-server patch - '{{kube_inst_ms_patch_inst}}'
  shell: '{{kube_inst_ms_patch_inst}}'
  register: rc
- debug: msg='{{rc.stdout_lines}}'

- name: Removing directory '{{kube_inst_ms_dir}}'
  file:
    path: '{{kube_inst_ms_dir}}'
    state: absent

- name: Kubernetes - checking 'kubectl top' - '{{kube_inst_ms_check}}'
  shell: '{{kube_inst_ms_check}}'
  register: rc
- debug: msg='{{rc.stdout_lines}}'
